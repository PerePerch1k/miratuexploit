import ctypes
import ctypes.wintypes
import psutil

roblox_process_id = None
for proc in psutil.process_iter():
    if proc.name() == 'RobloxPlayerBeta.exe':
        roblox_process_id = proc.pid
        break

if roblox_process_id is None:
    print("Roblox process not found")
    exit()

roblox_process_handle = ctypes.windll.kernel32.OpenProcess(0x1F0FFF, False, roblox_process_id)

if roblox_process_handle is None:
    print("Failed to open Roblox process")
    exit()

lua_state_address = ctypes.c_void_p()
read_bytes = ctypes.c_size_t()

if ctypes.windll.kernel32.ReadProcessMemory(roblox_process_handle, ctypes.c_void_p(0x007A1F40), ctypes.byref(lua_state_address), ctypes.sizeof(lua_state_address), ctypes.byref(read_bytes)) == 0:
    print("Failed to read Lua state address")
    exit()

def execute_lua_script(lua_code):
    if lua_state_address.value is None:
        print("Lua state address is null")
        return

    lua_state = ctypes.cast(lua_state_address.value, ctypes.POINTER(ctypes.c_void_p))
    lua_loadstring = ctypes.CFUNCTYPE(ctypes.c_int, ctypes.POINTER(ctypes.c_void_p), ctypes.c_char_p)(lua_state[0].loadstring)
    lua_pcall = ctypes.CFUNCTYPE(ctypes.c_int, ctypes.POINTER(ctypes.c_void_p), ctypes.c_int, ctypes.c_int, ctypes.c_int)(lua_state[0].pcall)

    if lua_loadstring is None or lua_pcall is None:
        print("Failed to get Lua function pointers")
        return

    lua_loadstring(lua_state, lua_code.encode('utf-8'))

    lua_pcall(lua_state, 0, 0, 0)

lua_code = "print('Hello, Roblox!')"
execute_lua_script(lua_code)

ctypes.windll.kernel32.CloseHandle(roblox_process_handle)